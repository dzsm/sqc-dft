#include "slater_poisson_maxn7.h"

#include <cmath>
//#include "fastonebigheader.h"
//#include "fmath/fmath.hpp"

//const double PI = 3.1415926535897932384626433832795028841971693993751;

double slater_poisson_maxn7(int n,int l,double x)
{
    // n 1 2 3 4 5 6 7
    // l 0 0 0 0 0 0 0
    //     1 1 1 1 1 1
    //       2 2 2 2 2
    //         3 3 3 3
    //           4 4 4
    //             5 5
    //               6

    if(x>0.1)
    {
        double e = std::exp(-x);
        //float e = fmath::exp(-x);

        switch (n*(n-1)/2+l)
        {
        case 0 :
            return (2. - 1.*e*(2. + x))/x;
        case 1 :
            return (6. - 1.*e*(6. + x*(4. + x)))/x;
        case 2 :
            return (3.*(8. - 1.*e*(2. + x)*(4. + x*(2. + x))))/std::pow(x,2);
        case 3 :
            return (24. + e*(-24. - 1.*x*(18. + x*(6. + x))))/x;
        case 4 :
            return (3.*(40. - 1.*e*(40. + x*(40. + x*(20. + x*(6. + x))))))/std::pow(x,2);
        case 5 :
            return (5.*(144. - 1.*e*(144. + x*(12. + std::pow(x,2))*(12. + x*(6. + x)))))/std::pow(x,3);
        case 6 :
            return (120. + e*(-120. - 1.*x*(96. + x*(36. + x*(8. + x)))))/x;
        case 7 :
            return (3.*(240. - 1.*e*(240. + x*(240. + x*(120. + x*(38. + x*(8. + x)))))))/std::pow(x,2);
        case 8 :
            return (5.*(1008. - 1.*e*(1008. + x*(1008. + x*(504. + x*(168. + x*(42. + x*(8. + x))))))))/std::pow(x,3);
        case 9 :
            return (7.*(5760. - 1.*e*(5760. + x*(5760. + x*(2880. + x*(960. + x*(240. + x*(48. + x*(8. + x)))))))))/std::pow(x,4);
        case 10 :
            return (720. + e*(-720. - 1.*x*(600. + x*(240. + x*(60. + x*(10. + x))))))/x;
        case 11 :
            return (3.*(1680. - 1.*e*(1680. + x*(1680. + x*(840. + x*(272. + x*(62. + x*(10. + x))))))))/std::pow(x,2);
        case 12 :
            return (5.*(8064. - 1.*e*(8064. + x*(8064. + x*(4032. + x*(1344. + x*(336. + x*(66. + x*(10. + x)))))))))/
                   std::pow(x,3);
        case 13 :
            return (7.*(51840. - 1.*e*(51840. + x*(51840. + x*(25920. + x*(8640. + x*(2160. + x*(432. + x*(72. + x*(10. + x))))))))))/std::pow(x,4);
        case 14 :
            return (9.*(403200. - 1.*e*(403200. + x*(403200. + x*(201600. + x*(67200. + x*(16800. + x*(3360. + x*(560. + x*(80. + x*(10. + x)))))))))))/std::pow(x,5);
        case 15 :
            return (5040. + e*(-5040. - 1.*x*(4320. + x*(1800. + x*(480. + x*(90. + x*(12. + x)))))))/x;
        case 16 :
            return (3.*(13440. - 1.*e*(13440. + x*(13440. + x*(6720. + x*(2200. + x*(520. + x*(92. + x*(12. + x)))))))))/std::pow(x,2);
        case 17 :
            return (5.*(72576. - 1.*e*(72576. + x*(72576. + x*(36288. + x*(12096. + x*(3024. + x*(600. + x*(96. + x*(12. + x))))))))))/
                   std::pow(x,3);
        case 18 :
            return (7.*(518400. - 1.*e*(518400. + x*(518400. + x*(259200. + x*(86400. + x*(21600. + x*(4320. + x*(720. + x*(102. + x*(12. + x)))))))))))/std::pow(x,4);
        case 19 :
            return (9.*(4.4352e6 - 1.*e*(4.4352e6 + x*(4.4352e6 + x*(2.2176e6 + x*(739200. + x*(184800. + x*(36960. + x*(6160. + x*(880. + x*(110. + x*(12. + x))))))))))))/
                   std::pow(x,5);
        case 20 :
            return (11.*(4.35456e7 - 1.*e*(4.35456e7 + x*(4.35456e7 + x*(2.17728e7 + x*(7.2576e6 + x*(1.8144e6 + x*(362880. + x*(60480. + x*(8640. + x*(1080. + x*(120. + x*(12. + x)))))))))))))/std::pow(x,6);
        case 21 :
            return (40320. + e*(-40320. - 1.*x*(35280. + x*(15120. + x*(4200. + x*(840. + x*(126. + x*(14. + x))))))))/x;
        case 22 :
            return (3.*(120960. - 1.*e*(120960. + x*(120960. + x*(60480. + x*(19920. + x*(4800. + x*(888. + x*(128. + x*(14. + x))))))))))/std::pow(x,2);
        case 23 :
            return (5.*(725760. - 1.*e*(725760. + x*(725760. + x*(362880. + x*(120960. + x*(30240. + x*(6024. + x*(984. + x*(132. + x*(14. + x)))))))))))/std::pow(x,3);
        case 24 :
            return (7.*(5.7024e6 - 1.*e*(5.7024e6 + x*(5.7024e6 + x*(2.8512e6 + x*(950400. + x*(237600. + x*(47520. + x*(7920. + x*(1128. + x*(138. + x*(14. + x))))))))))))/
                   std::pow(x,4);
        case 25 :
            return (9.*(5.32224e7 - 1.*e*(5.32224e7 + x*(5.32224e7 + x*(2.66112e7 + x*(8.8704e6 + x*(2.2176e6 + x*(443520. + x*(73920. + x*(10560. + x*(1320. + x*(146. + x*(14. + x)))))))))))))/

                   std::pow(x,5);
        case 26 :
            return (11.*(5.660928e8 - 1.*e*(5.660928e8 + x*(5.660928e8 + x*(2.830464e8 + x*(9.43488e7 +  x*(2.35872e7 + x*(4.71744e6 + x*(786240. + x*(112320. + x*(14040. + x*(1560. + x*(156. + x*(14. + x))))))))))))))/
                   std::pow(x,6);
        case 27 :
            return (13.*(6.7060224e9 - 1.*e*(6.7060224e9 + x*(6.7060224e9 + x*(3.3530112e9 + x*(1.1176704e9 + x*(2.794176e8 + x*(5.588352e7 + x*(9.31392e6 + x*(1.33056e6 + x*(166320. + x*(18480. + x*(1848. + x*(168. + x*(14. + x)))))))))))))))/std::pow(x,7);
        default:
            throw __FUNCTION__;
        }
    }
    else
    {
        switch (n*(n-1)/2+l)
        {
        case 0 :
            return 1. +
                   std::pow(x,2)*(-0.16666666666666666 + x*(0.08333333333333333 + x*(-0.025 + x*(0.005555555555555556 + x*(-0.000992063492063492 + (0.00014880952380952382 - 0.000019290123456790123*x)*x)))));
        case 1 :
            return 2. +

                   std::pow(x,3)*(-0.08333333333333333 + x*(0.05 + x*(-0.016666666666666666 + x*(0.003968253968253968 + (-0.000744047619047619 + 0.00011574074074074075*x)*x))));
        case 2 :
            return x*(1. +
                      std::pow(x,2)*(-0.3 + x*(0.16666666666666666 + x*(-0.05357142857142857 + x*(0.0125 + (-0.0023148148148148147 + 0.00035714285714285714*x)*x)))));
        case 3 :
            return 6. +

                   std::pow(x,4)*(-0.05 + x*(0.03333333333333333 + x*(-0.011904761904761904 + (0.002976190476190476 - 0.0005787037037037037*x)*x)));
        case 4 :
            return x*(2. +

                      std::pow(x,3)*(-0.16666666666666666 + x*(0.10714285714285714 + x*(-0.0375 + (0.009259259259259259 - 0.0017857142857142857*x)*x))));
        case 5 :
            return
                std::pow(x,2)*(1. + std::pow(x,2)*(-0.35714285714285715 + x*(0.20833333333333334 + x*(-0.06944444444444445 + (0.016666666666666666 - 0.0031565656565656565*x)*x))));
        case 6 :
            return 24. +
                   std::pow(x,5)*(-0.03333333333333333 + x*(0.023809523809523808 + (-0.008928571428571428 + 0.0023148148148148147*x)*x));
        case 7 :
            return x*(6. +
                      std::pow(x,4)*(-0.10714285714285714 + x*(0.075 + (-0.027777777777777776 + 0.007142857142857143*x)*x)));
        case 8 :
            return
                std::pow(x,2)*(2. +
                               std::pow(x,3)*(-0.20833333333333334 + x*(0.1388888888888889 + (-0.05 + 0.012626262626262626*x)*x)));
        case 9 :
            return
                std::pow(x,3)*(1. +
                               std::pow(x,2)*(-0.3888888888888889 + x*(0.23333333333333334 + (-0.07954545454545454 + 0.019444444444444445*x)*x)));
        case 10 :
            return 120. +
                   std::pow(x,6)*(-0.023809523809523808 + (0.017857142857142856 - 0.006944444444444444*x)*x);
        case 11 :
            return x*(24. +

                      std::pow(x,5)*(-0.075 + (0.05555555555555555 - 0.02142857142857143*x)*x));
        case 12 :
            return
                std::pow(x,2)*(6. +
                               std::pow(x,4)*(-0.1388888888888889 + (0.1 - 0.03787878787878788*x)*x));
        case 13 :
            return std::pow(x,3)*(2. +
                                  std::pow(x,3)*(-0.23333333333333334 + (0.1590909090909091 - 0.058333333333333334*x)*x));
        case 14 :
            return
                std::pow(x,4)*(1. + std::pow(x,2)*(-0.4090909090909091 + (0.25 - 0.08653846153846154*x)*x));
        case 15 :
            return 720. + (-0.017857142857142856 + 0.013888888888888888*x)*std::pow(x,7);
        case 16 :
            return x*(120. + (-0.05555555555555555 + 0.04285714285714286*x)*std::pow(x,6));
        case 17 :
            return
                std::pow(x,2)*(24. + (-0.1 + 0.07575757575757576*x)*
                               std::pow(x,5));
        case 18 :
            return
                std::pow(x,3)*(6. + (-0.1590909090909091 + 0.11666666666666667*x)*
                               std::pow(x,4));
        case 19 :
            return std::pow(x,4)*(2. + (-0.25 + 0.17307692307692307*x)*
                                  std::pow(x,3));
        case 20 :
            return std::pow(x,5)*(1. + (-0.4230769230769231 + 0.2619047619047619*x)*std::pow(x,2));
        case 21 :
            return 5040. - 0.013888888888888888*std::pow(x,8);
        case 22 :
            return x*(720. - 0.04285714285714286*std::pow(x,7));
        case 23 :
            return std::pow(x,2)*(120. - 0.07575757575757576*std::pow(x,6));
        case 24 :
            return std::pow(x,3)*(24. - 0.11666666666666667*std::pow(x,5));
        case 25 :
            return std::pow(x,4)*(6. - 0.17307692307692307*std::pow(x,4));
        case 26 :
            return std::pow(x,5)*(2. - 0.2619047619047619*std::pow(x,3));
        case 27 :
            return std::pow(x,6)*(1. - 0.43333333333333335*std::pow(x,2));
        default:
            throw __FUNCTION__;
        }

    }

    return 0.0;
}


